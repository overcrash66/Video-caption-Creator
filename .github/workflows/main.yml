name: Build, Package, and Release Python App

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag name (e.g., v1.0.0)'
        required: true
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
   
    permissions:
      contents: write  # Needed for creating releases
      # Removed unnecessary packages: write and issues: write permissions

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Updated to latest version

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build binary with PyInstaller
        run: |
          # Add necessary data files using PyInstaller's --add-data
          pyinstaller --onefile \
            --add-data 'utils:utils' \
            --add-data 'processors:processors' \
            --add-data 'gui.py:.' \
            main.py

      - name: Package application into ZIP
        run: |
          mkdir -p release
          cp dist/main release/
          cd release && zip -r app.zip ./* && cd ..

      - name: Determine tag name
        id: tag_name
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_OUTPUT
          else
            echo "TAG_NAME=${{ github.ref_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1  # More modern release action
        if: success()
        with:
          tag_name: ${{ steps.tag_name.outputs.TAG_NAME }}
          name: Release ${{ steps.tag_name.outputs.TAG_NAME }}
          files: |
            release/app.zip
