name: Build, Package, and Release Python App

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag name (e.g., v1.0.0)'
        required: true
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: windows-latest

    permissions:
      contents: write  # Needed for creating releases

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: C:\Users\runneradmin\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          pip install -r requirements.txt
          python -m ensurepip
          pip install pillow pydub TTS ffmpeg-python
          pip install torch torchaudio torchvision
          pip install librosa

      - name: Build binary with PyInstaller (non-single file)
        run: |
         pyinstaller --noconfirm --name Video-Caption-Creator `
          --add-data "utils;utils" `
          --add-data "processors;processors" `
          --add-data "gui.py;." `
          --hidden-import=tkinter `
          --hidden-import=_tkinter `
          --hidden-import=tkinter.ttk `
          --hidden-import=tkinter.filedialog `
          --hidden-import=tkinter.messagebox `
          --hidden-import=tkinter.colorchooser `
          --hidden-import=PIL.Image `
          --hidden-import=PIL.ImageDraw `
          --hidden-import=PIL.ImageFont `
          --hidden-import=PIL.ImageColor `
          --hidden-import=PIL.ImageOps `
          --hidden-import=PIL.ImageTk `
          --hidden-import=pydub `
          --hidden-import=TTS `
          --hidden-import=ffmpeg `
          --hidden-import=concurrent.futures `
          --hidden-import=json `
          --hidden-import=os `
          --hidden-import=logging `
          --hidden-import=subprocess `
          --hidden-import=torch `
          --hidden-import=torch.nn `
          --hidden-import=torchvision `
          --hidden-import=torchaudio `
          --hidden-import=torch.utils `
          --hidden-import=librosa `
          main.py

      
      - name: Debug Tkinter Installation
        run: python -c "import tkinter; print('Tkinter is installed')"

      - name: Debug PyInstaller Output
        run: dir dist\Video-Caption-Creator

      - name: Package application into ZIP
        run: |
          mkdir release
          xcopy /E /I dist\Video-Caption-Creator release\  # Copy built app
          xcopy /E /I utils release\utils\                 # Copy utils folder
          xcopy /E /I processors release\processors\       # Copy processors folder
          copy gui.py release\                             # Copy gui.py
          cd release && powershell -Command "Compress-Archive -Path * -DestinationPath Video-Caption-Creator.zip" && cd ..

      - name: Determine tag name
        id: tag_name
        shell: pwsh
        run: |
          if ("${{ github.event_name }}" -eq "workflow_dispatch") {
            echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $env:GITHUB_OUTPUT
          } else {
            echo "TAG_NAME=${{ github.ref_name }}" >> $env:GITHUB_OUTPUT
          }

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: success()
        with:
          tag_name: ${{ steps.tag_name.outputs.TAG_NAME }}
          name: Release ${{ steps.tag_name.outputs.TAG_NAME }}
          files: |
            release/Video-Caption-Creator.zip
